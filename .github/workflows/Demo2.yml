name: ELT Pipeline CI/CD (Airflow + dbt)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # --- CI STAGE ---
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black pytest sqlfluff apache-airflow
          pip install dbt-core dbt-postgres  # change to dbt-bigquery/dbt-snowflake if needed

      # ---- Lint & Format ----
      - name: Lint Python (Airflow DAGs + pipeline code)
        run: flake8 dags/ pipeline/

      - name: Check Python formatting
        run: black --check dags/ pipeline/

      - name: Lint SQL (dbt + raw SQL)
        run: sqlfluff lint models/ sql/

      # ---- Airflow Validation ----
      - name: Validate Airflow DAGs
        run: python -m airflow dags list

      - name: Run Python/Unit Tests
        run: pytest tests/

      # ---- dbt Validation ----
      - name: Debug dbt project
        run: dbt debug --profiles-dir .

      - name: Run dbt models (dry run / staging only)
        run: dbt run --models staging --profiles-dir .

      - name: Run dbt tests
        run: dbt test --profiles-dir .

  # --- BUILD STAGE ---
  docker-build:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t elt-pipeline:test .

      - name: Run container smoke test
        run: docker run --rm elt-pipeline:test --help

  # --- DEPLOY STAGE ---
  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Deploy Airflow DAGs
        run: |
          echo "Deploying DAGs..."
          # Example: rsync/scp to Airflow server, or Helm upgrade
          # rsync -avz dags/ airflow@server:/opt/airflow/dags/

      - name: Deploy dbt Project
        run: |
          echo "Deploying dbt project..."
          # Example: trigger dbt run inside Airflow or directly
          # dbt run --profiles-dir .
