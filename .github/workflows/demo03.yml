name: ELT Pipeline CI/CD

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  # --- CI CHECKS ---
  ci-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black pytest sqlfluff

      - name: Run Python linting (flake8)
        run: flake8 .

      - name: Run Python formatting check (black)
        run: black --check .

      - name: Run SQL linting (sqlfluff)
        run: sqlfluff lint .

      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings -q

  # --- BUILD & DOCKER TEST ---
  docker-build:
    runs-on: ubuntu-latest
    needs: ci-checks
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t elt-pipeline:test .

      - name: Run container smoke test
        run: docker run --rm elt-pipeline:test --help

  # --- DEPLOYMENT (only on main) ---
  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy ELT Pipeline
        run: |
          echo "Deploying pipeline..."
          # Example: push Docker image / trigger Airflow / DBT
          # docker push myregistry/elt-pipeline:latest
          # or call a deploy script
